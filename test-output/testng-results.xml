<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="3" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-15T18:44:49 IST" name="Suite" finished-at="2021-10-15T18:45:43 IST" duration-ms="53675">
    <groups>
    </groups>
    <test started-at="2021-10-15T18:44:49 IST" name="test2" finished-at="2021-10-15T18:44:49 IST" duration-ms="31">
      <class name="TestNG.Automate3">
        <test-method is-config="true" signature="failure()[pri:0, instance:TestNG.Automate3@7c83dc97]" started-at="2021-10-15T18:45:43 IST" name="failure" finished-at="2021-10-15T18:45:43 IST" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestNG.Automate3.failure(Automate3.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:351)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failure -->
      </class> <!-- TestNG.Automate3 -->
    </test> <!-- test2 -->
    <test started-at="2021-10-15T18:44:49 IST" name="Test1" finished-at="2021-10-15T18:45:43 IST" duration-ms="53675">
      <class name="TestNG.Automate1">
        <test-method signature="ValidateLogin(java.lang.String, java.lang.String)[pri:0, instance:TestNG.Automate1@7748410a]" started-at="2021-10-15T18:44:50 IST" name="ValidateLogin" data-provider="getdata" finished-at="2021-10-15T18:45:08 IST" duration-ms="18641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLogin -->
        <test-method signature="ValidateLogin(java.lang.String, java.lang.String)[pri:0, instance:TestNG.Automate1@7748410a]" started-at="2021-10-15T18:45:08 IST" name="ValidateLogin" data-provider="getdata" finished-at="2021-10-15T18:45:23 IST" duration-ms="14897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLogin -->
        <test-method signature="ValidateLogin(java.lang.String, java.lang.String)[pri:0, instance:TestNG.Automate1@7748410a]" started-at="2021-10-15T18:45:23 IST" name="ValidateLogin" data-provider="getdata" finished-at="2021-10-15T18:45:43 IST" duration-ms="19670" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdnaame]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateLogin -->
      </class> <!-- TestNG.Automate1 -->
      <class name="TestNG.Automate3">
        <test-method is-config="true" signature="FindLargest()[pri:0, instance:TestNG.Automate3@7c83dc97]" started-at="2021-10-15T18:44:49 IST" name="FindLargest" finished-at="2021-10-15T18:44:49 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FindLargest -->
      </class> <!-- TestNG.Automate3 -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
